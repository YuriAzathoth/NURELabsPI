SET (TARGET_NAME Server)

FILE (GLOB_RECURSE SOURCE_FILES *.cpp)
FILE (GLOB_RECURSE HEADER_FILES *.h)

ADD_LIBRARY (${TARGET_NAME} SHARED ${SOURCE_FILES} ${HEADER_FILES})

TARGET_INCLUDE_DIRECTORIES (${TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
TARGET_INCLUDE_DIRECTORIES (${TARGET_NAME} SYSTEM PRIVATE ${Boost_INCLUDE_DIR})
TARGET_LINK_LIBRARIES (${TARGET_NAME} PRIVATE ${Poco_LIBRARIES})

IF (PROJECT_WARNINGS)
	IF (CXX_COMPILER_ID STREQUAL Clang OR CXX_COMPILER_ID STREQUAL AppleClang OR CXX_COMPILER_ID STREQUAL GNU)
		TARGET_COMPILE_OPTIONS (${TARGET_NAME} PRIVATE
			-Wall -Wextra -Wpedantic -Werror
			-Wnon-virtual-dtor -Woverloaded-virtual -Wsign-promo -Wshadow=compatible-local
			-Wconversion -Wzero-as-null-pointer-constant -Wextra-semi
		)
	ELSEIF (CXX_COMPILER_ID STREQUAL MSVC)
		TARGET_COMPILE_OPTIONS (${TARGET_NAME} PRIVATE /W4)
	ENDIF ()
ENDIF ()

IF (PROJECT_PCH)
	SET_TARGET_PROPERTIES (${TARGET_NAME} PROPERTIES
		VISIBILITY_INLINES_HIDDEN 1
		CXX_VISIBILITY_PRESET hidden
	)
	COTIRE (${TARGET_NAME})
ENDIF ()

INSTALL (TARGETS ${TARGET_NAME})

FUNCTION (RESOURCE_DIRECTORY SUBDIRECTORY)
	SET (DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY})
	FILE (GLOB_RECURSE CONTENT_FILES ${DIRECTORY}/*.* RELATIVE ${DIRECTORY} ${CMAKE_BINARY_DIR})
	FOREACH (CONTENT_FILE_IN ${CONTENT_FILES})
		FILE (RELATIVE_PATH CONTENT_FILE ${CMAKE_CURRENT_SOURCE_DIR} ${CONTENT_FILE_IN})
		CONFIGURE_FILE (${CONTENT_FILE_IN} ${CMAKE_RESOURCE_DIRECTORY}/${CONTENT_FILE} COPYONLY)
	ENDFOREACH ()
	INSTALL (DIRECTORY ${CMAKE_RESOURCE_DIRECTORY} DESTINATION .)
ENDFUNCTION ()

RESOURCE_DIRECTORY (Config)
